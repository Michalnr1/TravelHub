@using TravelHub.Domain.Entities
@model TravelHub.Domain.Entities.Day
@{
    bool isGroup = Model.Number == null;
    ViewData["Title"] = isGroup ? "Group Details" : $"Day {Model.Number} Details";

    // Grupowanie aktywności
    var accommodations = Model.Activities?.OfType<Accommodation>().ToList() ?? new List<Accommodation>();
    var otherActivities = Model.Activities?
        .Where(a => a is not Accommodation)
        .OrderBy(a => a.Order)
        .ToList() ?? new List<Activity>();

    // Wszystkie aktywności z podróży (do wyświetlenia po prawej stronie)
    var allTripActivities = Model.Trip?.Activities?
        .Where(a => a.DayId == null && a is not Accommodation)
        .OrderBy(a => a.Name)
        .ToList() ?? new List<Activity>();
}

<h1>@ViewData["Title"]</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
            @if (isGroup)
            {
                <span class="badge bg-info ms-2">Group</span>
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd class="col-sm-10">
            @Model.Date.ToString("D")
        </dd>

        <dt class="col-sm-2">
            Trip
        </dt>
        <dd class="col-sm-10">
            @Model.Trip?.Name
        </dd>
    </dl>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-4" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Sekcja Accommodations -->
<div class="mt-4">
    <h4>
        <i class="fas fa-hotel text-warning"></i> Accommodations
    </h4>

    @if (accommodations.Any())
    {
        <div class="row">
            @foreach (var accommodation in accommodations.OrderBy(a => a.Order))
            {
                <div class="col-md-6 mb-3">
                    <div class="card border-warning">
                        <div class="card-header bg-warning bg-opacity-10 d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">
                                <i class="fas fa-hotel"></i> @accommodation.Name
                            </h6>
                            <span class="badge bg-warning">Accommodation</span>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(accommodation.Description))
                            {
                                <p class="card-text">@accommodation.Description</p>
                            }

                            <div class="row small text-muted">
                                <div class="col-6">
                                    <strong>Check-in:</strong><br>
                                    @accommodation.CheckIn.ToString("MMM dd, yyyy")<br>
                                    @TimeSpan.FromHours((double)accommodation.CheckInTime).ToString(@"hh\:mm")
                                </div>
                                <div class="col-6">
                                    <strong>Check-out:</strong><br>
                                    @accommodation.CheckOut.ToString("MMM dd, yyyy")<br>
                                    @TimeSpan.FromHours((double)accommodation.CheckOutTime).ToString(@"hh\:mm")
                                </div>
                            </div>

                            <div class="mt-2">
                                <small class="text-muted">
                                    <i class="fas fa-map-marker-alt"></i>
                                    @accommodation.Latitude.ToString("F6"), @accommodation.Longitude.ToString("F6")
                                </small>
                            </div>

                            @if (accommodation.Cost > 0)
                            {
                                <div class="mt-2">
                                    <strong>Cost: </strong>@accommodation.Cost.ToString("C")
                                </div>
                            }

                            @if (accommodation.Rating.HasValue)
                            {
                                <div class="mt-2">
                                    <strong>Rating: </strong>
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        <i class="fas fa-star @(i < (int)accommodation.Rating ? "text-warning" : "text-muted")"></i>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i> No accommodations booked for this @(isGroup ? "group" : "day").
        </div>
    }
</div>

<div class="row mt-4">
    <!-- Lewa kolumna: Activities i Spots przypisane do dnia -->
    <div class="col-md-6">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4>
                <i class="fas fa-list-check text-primary"></i> Activities & Spots
                <span class="badge bg-primary">@otherActivities.Count</span>
            </h4>
        </div>

        @if (otherActivities.Any())
        {
            <div class="list-group">
                @foreach (var activity in otherActivities)
                {
                    var isSpot = activity is Spot;
                    var isRegularActivity = !isSpot;

                    <div class="list-group-item d-flex justify-content-between align-items-start
                                                @(isSpot ? "border-success" : "border-primary")"
                         style="border-left-width: 4px;">

                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">
                                        @if (isSpot)
                                        {
                                            <i class="fas fa-map-marker-alt text-success"></i>
                                        }
                                        else
                                        {
                                            <i class="fas fa-running text-primary"></i>
                                        }
                                        @activity.Name

                                        <span class="badge @(isSpot ? "bg-success" : "bg-primary") ms-2">
                                            @if (isSpot)
                                            {
                                                @:Spot
                                            }
                                            else
                                            {
                                                @:Activity
                                            }
                                        </span>
                                    </h6>
                                </div>
                                <div class="text-end">
                                    <small class="text-muted">Order: @activity.Order</small>
                                    <form asp-controller="Activities" asp-action="RemoveFromDay" method="post" class="d-inline">
                                        <input type="hidden" name="activityId" value="@activity.Id" />
                                        <input type="hidden" name="dayId" value="@Model.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger ms-2"
                                                title="Remove from @(isGroup ? "group" : "day")">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>

                            @if (!string.IsNullOrEmpty(activity.Description))
                            {
                                <p class="mb-1 small">@activity.Description</p>
                            }

                            <div class="mt-2">
                                <small class="text-muted">
                                    <strong>Duration:</strong> @activity.Duration hours
                                </small>

                                @if (activity.Category != null)
                                {
                                    <small class="text-muted ms-3">
                                        <strong>Category:</strong> @activity.Category.Name
                                    </small>
                                }

                                <!-- Dodatkowe informacje dla Spot -->
                                @if (isSpot)
                                {
                                    var spot = (Spot)activity;
                                    <small class="text-muted ms-3">
                                        <i class="fas fa-location-arrow"></i>
                                        @spot.Latitude.ToString("F4"), @spot.Longitude.ToString("F4")
                                    </small>
                                    @if (spot.Cost > 0)
                                    {
                                        <small class="text-muted ms-3">
                                            <strong>Cost:</strong> @spot.Cost.ToString("C")
                                        </small>
                                    }
                                    @if (spot.Rating.HasValue)
                                    {
                                        <small class="text-muted ms-3">
                                            <strong>Rating:</strong>
                                            @for (int i = 0; i < 5; i++)
                                            {
                                                <i class="fas fa-star @(i < (int)spot.Rating ? "text-warning" : "text-muted")" style="font-size: 0.8em;"></i>
                                            }
                                        </small>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle"></i> No activities or spots in this @(isGroup ? "group" : "day").
            </div>
        }

        <!-- Przyciski dodawania nowych aktywności -->
        <div class="mt-4 row g-2">
            <div class="col-md-4">
                <a asp-controller="Activities" asp-action="AddToTrip"
                   asp-route-tripId="@Model.TripId" asp-route-dayId="@Model.Id"
                   class="btn btn-primary w-100">
                    <i class="fas fa-plus"></i> Add Activity
                </a>
            </div>

            <div class="col-md-4">
                <a asp-controller="Spots" asp-action="AddToTrip"
                   asp-route-tripId="@Model.TripId" asp-route-dayId="@Model.Id"
                   class="btn btn-success w-100">
                    <i class="fas fa-map-marker-alt"></i> Add Spot
                </a>
            </div>

            <div class="col-md-4">
                <a asp-controller="Accommodations" asp-action="AddToTrip"
                   asp-route-tripId="@Model.TripId"
                   class="btn btn-warning w-100">
                    <i class="fas fa-hotel"></i> Add Accommodation
                </a>
            </div>
        </div>
    </div>

    <!-- Prawa kolumna: Dostępne aktywności z podróży -->
    <div class="col-md-6">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4>
                <i class="fas fa-list text-secondary"></i> Available Activities
                <span class="badge bg-secondary">@allTripActivities.Count</span>
            </h4>
        </div>

        @if (allTripActivities.Any())
        {
            <div class="list-group">
                @foreach (var activity in allTripActivities)
                {
                    var isSpot = activity is Spot;
                    var isRegularActivity = !isSpot;

                    <div class="list-group-item d-flex justify-content-between align-items-start
                                                @(isSpot ? "border-success" : "border-primary")"
                         style="border-left-width: 4px; opacity: 0.8;">

                        <div class="flex-grow-1">
                            <h6 class="mb-1">
                                @if (isSpot)
                                {
                                    <i class="fas fa-map-marker-alt text-success"></i>
                                }
                                else
                                {
                                    <i class="fas fa-running text-primary"></i>
                                }
                                @activity.Name

                                <span class="badge @(isSpot ? "bg-success" : "bg-primary") ms-2">
                                    @if (isSpot)
                                    {
                                        @:Spot
                                    }
                                    else
                                    {
                                        @:Activity
                                    }
                                </span>
                            </h6>

                            @if (!string.IsNullOrEmpty(activity.Description))
                            {
                                <p class="mb-1 small">@activity.Description</p>
                            }

                            <div class="mt-1">
                                <small class="text-muted">
                                    <strong>Duration:</strong> @activity.Duration hours
                                </small>
                            </div>
                        </div>

                        <form asp-controller="Activities" asp-action="AddToDay" method="post" class="ms-2">
                            <input type="hidden" name="activityId" value="@activity.Id" />
                            <input type="hidden" name="dayId" value="@Model.Id" />
                            <button type="submit" class="btn btn-sm btn-outline-success"
                                    title="Add to @(isGroup ? "group" : "day")">
                                <i class="fas fa-plus"></i> Add
                            </button>
                        </form>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-secondary">
                <i class="fas fa-info-circle"></i> No available activities in this trip.
            </div>
        }
    </div>
</div>

<!-- Przyciski akcji na dole -->
<div class="mt-4 d-flex flex-wrap gap-2">
    @if (isGroup)
    {
        <a asp-action="EditGroup" asp-route-id="@Model.Id" class="btn btn-warning">
            <i class="fas fa-edit"></i> Edit Group
        </a>
    }

    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
        <i class="fas fa-trash"></i> Delete @(isGroup ? "Group" : "Day")
    </a>

    <a asp-controller="Trips" asp-action="Details" asp-route-id="@Model.TripId" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to Trip
    </a>

    <a asp-action="MapView" asp-route-id="@Model.Id" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> View on Map
    </a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <style>
        .list-group-item {
            transition: all 0.3s ease;
        }

            .list-group-item:hover {
                opacity: 1 !important;
                transform: translateX(2px);
            }

        .border-warning {
            border-left-color: #ffc107 !important;
        }

        .border-success {
            border-left-color: #198754 !important;
        }

        .border-primary {
            border-left-color: #0d6efd !important;
        }

        .badge {
            font-size: 0.7em;
        }
    </style>
}