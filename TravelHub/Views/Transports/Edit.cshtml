@model TravelHub.Web.ViewModels.Transports.TransportCreateEditViewModel

@{
    ViewData["Title"] = "Edit Transport";
}

<h1>Edit Transport</h1>

<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <select asp-for="Type" class="form-control">
                    <option value="">-- Select Transportation Type --</option>
                    @foreach (var type in Model.TransportationTypes)
                    {
                        <option value="@type.Value" selected="@(type.Value == Model.Type)">@type.Name</option>
                    }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DurationString" class="control-label"></label>
                <input asp-for="DurationString" class="form-control" type="time" step="300" />
                <span asp-validation-for="DurationString" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Cost" class="control-label"></label>
                <input asp-for="Cost" class="form-control" type="number" step="0.01" />
                <span asp-validation-for="Cost" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="TripId" class="control-label"></label>
                <select asp-for="TripId" asp-items="Model.TripSelectList" class="form-control">
                    <option value="">-- Select Trip --</option>
                </select>
                <span asp-validation-for="TripId" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="FromSpotId" class="control-label"></label>
                        <select asp-for="FromSpotId" asp-items="Model.SpotSelectList" class="form-control">
                            <option value="">-- Select From Spot --</option>
                        </select>
                        <span asp-validation-for="FromSpotId" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ToSpotId" class="control-label"></label>
                        <select asp-for="ToSpotId" asp-items="Model.SpotSelectList" class="form-control">
                            <option value="">-- Select To Spot --</option>
                        </select>
                        <span asp-validation-for="ToSpotId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-controller="Trips" asp-action="Details" asp-route-id="@Model.TripId" class="btn btn-secondary">Back to trip</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
                $(document).ready(function () {
            function filterSpots() {
                var tripId = $('#TripId').val();
                var selectedFromSpot = $('#FromSpotId').data('selected'); // zapamiętaj z modelu
                var selectedToSpot = $('#ToSpotId').data('selected');

                if (tripId) {
                    $.getJSON('@Url.Action("GetSpotsByTrip", "Transports")', { tripId: tripId }, function (data) {
                        var fromSpotSelect = $('#FromSpotId');
                        var toSpotSelect = $('#ToSpotId');

                        fromSpotSelect.empty().append($('<option>').val('').text('-- Select From Spot --'));
                        toSpotSelect.empty().append($('<option>').val('').text('-- Select To Spot --'));

                        $.each(data, function (index, spot) {
                            var fromOption = $('<option>').val(spot.id).text(spot.name + ' (' + spot.coordinates + ')');
                            var toOption = $('<option>').val(spot.id).text(spot.name + ' (' + spot.coordinates + ')');

                            // Ustaw selected, jeśli pasuje do Model.FromSpotId / ToSpotId
                            if (spot.id == selectedFromSpot) fromOption.attr('selected', 'selected');
                            if (spot.id == selectedToSpot) toOption.attr('selected', 'selected');

                            fromSpotSelect.append(fromOption);
                            toSpotSelect.append(toOption);
                        });
                    });
                } else {
                    $('#FromSpotId').empty().append($('<option>').val('').text('-- Select From Spot --'));
                    $('#ToSpotId').empty().append($('<option>').val('').text('-- Select To Spot --'));
                }
            }

            // Przechowaj wartości w data-selected (renderowane z modelu)
            $('#FromSpotId').data('selected', '@Model.FromSpotId');
            $('#ToSpotId').data('selected', '@Model.ToSpotId');

            $('#TripId').change(filterSpots);
            filterSpots(); // Initial filter on page load
        });
    </script>
}